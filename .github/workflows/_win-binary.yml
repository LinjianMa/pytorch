name: windows-binary-build

on:
  workflow_call:
    inputs:
      build-environment:
        required: true
        type: string
        description: df
      matrix:
        required: true
        type: string
        description: JSON description of what test configs to run.
      package-type:
        required: true
        type: string
        description: Package type to build.
      build-or-test:
        required: true
        type: string
        description: Either "build" or "test"

env:
  # Needed for conda builds
  ALPINE_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/tool/alpine"
  ANACONDA_USER: pytorch
  AWS_DEFAULT_REGION: us-east-1
  BUILD_ENVIRONMENT: ${{ inputs.build-environment }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IN_CI: 1
  IS_GHA: 1
  PR_LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
  PR_NUMBER: ${{ github.event.pull_request.number }}
  PYTORCH_RETRY_TEST_CASES: 1
  SHA1: ${{ github.event.pull_request.head.sha || github.sha }}
  SKIP_ALL_TESTS: 1

jobs:
  job:
    if: ${{ github.repository_owner == 'pytorch' }}
    name: ${{ inputs.build-or-test }} (py${{ matrix.python_version}}, ${{ matrix.gpu_arch_version }})
    runs-on: [self-hosted, windows.4xlarge]
    timeout-minutes: 240
    strategy:
      matrix: ${{ fromJSON(inputs.matrix) }}
      fail-fast: false

    env:
      PYTORCH_ROOT: ${{ github.workspace }}/pytorch
      BUILDER_ROOT: ${{ github.workspace }}/builder
      PACKAGE_TYPE: ${{ inputs.package-type }}
      # TODO: This is a legacy variable that we eventually want to get rid of in
      #       favor of GPU_ARCH_VERSION
      GPU_ARCH_VERSION: ${{ matrix.gpu_arch_version }}
      # This is a dummy value for libtorch to work correctly with our batch scripts
      # without this value pip does not get installed for some reason
      DESIRED_PYTHON: ${{ matrix.python_version }}

    steps:
      # [see note: pytorch repo ref]
      - name: Checkout PyTorch
        uses: pytorch/pytorch/.github/actions/checkout-pytorch@migrate-binary
        with:
          no-sudo: true
          path: pytorch

      - name: Checkout PyTorch Builder
        uses: pytorch/pytorch/.github/actions/checkout-pytorch@migrate-binary
        with:
          no-sudo: true
          path: builder
          repository: pytorch/builder
          ref: main

      - name: Setup Windows
        uses: ./pytorch/.github/actions/setup-win
        with:
          # the build script will install cuda for us
          cuda-version: cpu

      - name: Populate binary env
        id: binary-env
        shell: bash
        run: |
          echo "BINARY_ENV_FILE=${RUNNER_TEMP}/env" >> "${GITHUB_ENV}"
          echo "PYTORCH_FINAL_PACKAGE_DIR=${RUNNER_TEMP}/artifacts" >> "${GITHUB_ENV}"
          echo "WIN_PACKAGE_WORK_DIR=${RUNNER_TEMP}"

          "${PYTORCH_ROOT}/.github/scripts/populate_binary_env.py"
          "${PYTORCH_ROOT}/.circleci/scripts/binary_populate_env.sh"
          echo "::set-output name=build-name::${BUILD_NAME}"

      ############# If we're buildng the binary ################
      - name: Build PyTorch binary
        if: inputs.build-or-test == 'build'
        shell: bash
        run: |
          "${PYTORCH_ROOT}/.circleci/scripts/binary_windows_build.sh"

      - name: Upload artifacts to s3
        if: inputs.build-or-test == 'build'
        uses: seemethere/upload-artifact-s3@v4
        with:
          retention-days: 14
          if-no-files-found: error
          name: ${{ steps.binary-env.outputs.build-name }}
          path: ${{ env.PYTORCH_FINAL_PACKAGE_DIR }}

      ############# If we're testing the binary ################
      - uses: seemethere/download-artifact-s3@v3
        if: inputs.build-or-test == 'test'
        name: Download Build Artifacts
        with:
          name: ${{ steps.binary-env.outputs.build-name }}
          path: "${{ env.PYTORCH_FINAL_PACKAGE_DIR }}"

      - name: Test PyTorch binary
        if: inputs.build-or-test == 'test'
        shell: bash
        run: |
          "${PYTORCH_ROOT}/.circleci/scripts/binary_windows_test.sh"

      - name: Teardown Windows
        uses: ./pytorch/.github/actions/teardown-win
        if: always()
        with:
          extra-delete-dir: /c/${{ github.run_id }}/build-results/
          working-directory: pytorch
